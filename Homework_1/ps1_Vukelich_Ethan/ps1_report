3.b) What is the min/max of x, what is the mean, what is the std deviation

min_x =

  -11.9860


max_x =

   14.4556


mean_x =

    0.9976


stdD_x =

    2.7988

3.c) plot normalized histogram of x











Yes the histogram looks like a Gaussian Distrabution due to its values being strictly taken from the Gaussian Distrabution.

3.d) Use loop to add 1 to every value in x and time the operation

Elapsed time is 0.013267 seconds.

3.e) Iterate though the original x and then add 1 without using a loop

Elapsed time is 0.001086 seconds.

3.f) define vector y that contains all values 5 < x < 20

I retreived 76341 elements in the vector for the first run and on the 2nd run i got 76564 elements. There is a differnece of 223 elements, this is due to the RNG of X and how the values will never be identical.

4.a) Define matrix A, find min of each col, min in row, smallest value in A, then create matrix B whos elements are the square of A

minCol_A =

     2     1     3


minRow_A =

     1
     2
     6


min_A =

     1


B =

    1.4142    1.0000    1.7321
    1.4142    2.4495    2.8284
    2.4495    2.8284    4.2426


4.b) solve system of linear equations

xyz =

    0.3000
    0.4000
   -0.0000

4.c) Compute the norms

L1_x1 =

     2


L2_x1 =

    1.5811


L1_x2 =

     2


L2_x2 =

    1.4142

5) Use the created normalize_col function

input1 =

    0.8428    0.0932    0.4379    0.3308
    0.0024   -1.2733   -0.1711    1.7447
    1.6506    1.3180   -0.4573   -1.1384
    0.9068   -0.2341   -0.5975   -0.8701
    0.0805    0.5344   -1.3071    1.4247


output1 =

    0.2420    0.2128   -0.2090    0.2218
    0.0007   -2.9059    0.0817    1.1696
    0.4739    3.0078    0.2183   -0.7631
    0.2603   -0.5343    0.2852   -0.5833
    0.0231    1.2196    0.6239    0.9551


test_input1 =

    1.0000    1.0000    1.0000    1.0000


input2 =

    1.0113    0.3861    0.2033    0.5599   -0.1478   -0.5614    0.8724   -0.5982    0.5706   -0.8681
   -0.7396    1.2938    1.0087    0.3014    2.7400    1.9802   -0.7378    0.1714    0.2677   -0.1414
    0.3325    0.3793    0.3210   -0.4543    1.2462    0.6058    1.7506    0.4113    0.5003    0.2231
   -0.2652   -0.8281   -0.0484    1.0363    0.4256   -1.0744   -0.0351    0.2996    0.1661    1.6014
   -0.7538    0.4564   -1.0374   -0.3503    0.0068   -1.6511   -1.3475   -0.5510    0.3812    1.1345
    2.2062   -0.4495    0.2974    0.7970    0.4183    0.5996   -0.3141    0.6981   -0.7591   -0.3212
    0.5228   -0.3944   -1.9781    1.8983   -0.6683    0.4806    0.2970    0.0651   -0.4098   -0.8889


output2 =

    0.4370    0.4576   -0.1648    0.1478   -0.0368   -1.4800    1.7967   -1.2054    0.7959   -1.1743
   -0.3196    1.5336   -0.8178    0.0796    0.6815    5.2202   -1.5195    0.3454    0.3734   -0.1913
    0.1437    0.4497   -0.2602   -0.1199    0.3099    1.5970    3.6055    0.8287    0.6978    0.3017
   -0.1146   -0.9816    0.0392    0.2735    0.1059   -2.8322   -0.0722    0.6037    0.2317    2.1663
   -0.3257    0.5411    0.8410   -0.0925    0.0017   -4.3526   -2.7752   -1.1103    0.5316    1.5346
    0.9534   -0.5328   -0.2411    0.2104    0.1040    1.5808   -0.6470    1.4066   -1.0588   -0.4345
    0.2259   -0.4675    1.6037    0.5011   -0.1662    1.2669    0.6117    0.1312   -0.5716   -1.2025


test_input2 =

    1.0000    1.0000    1.0000    1.0000    1.0000    1.0000    1.0000    1.0000    1.0000    1.0000

